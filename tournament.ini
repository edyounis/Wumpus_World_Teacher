[CANVAS]

# For information generating an access token see:
# https://community.canvaslms.com/docs/DOC-10806-4214724194
# The tournament will need one to verify your ability to download canvas files.
accesstoken = 

# For information discovering the course id see:
# https://canvas.instructure.com/doc/api/courses.html
# The tournament will download files from this course.
courseid = 

# For information discovering the assignment id see:
# https://canvas.instructure.com/doc/api/assignments.html
# The tournament will download these submissions.
assignmentid = 

# For information discovering the group category id see:
# https://canvas.instructure.com/doc/api/group_categories.html
# The tournament will download group information from this category.
group_cat_id = 

[SCORING]

# A successful compile is worth this many points.
compile_worth = 5

# A submitted report is worth this many points.
# If set to zero, reports won't be collected.
report_worth = 15

# A perfect execution is worth this many points.
execution_worth = 30

# The performance score required for a perfect execution.
score_requirement = 200

# Every performance point below score_requirement is a loss of this many grade points.
grade_loss_per_score = 0.5

[SETTINGS]

# After an agent has run for this many seconds, there agent will be disqualified and terminated.
timeout_seconds = 7200

# All team names have to follow this format as a python regular expression.
team_name_format = [-a-zA-Z0-9]*$

[INTERNALS]

cpp_shell_src = Resources/Blank_Cpp_Shell
java_shell_src = Resources/Blank_Java_Shell
python_shell_src = Resources/Blank_Python_Shell
world_folder = worlds

world_generator = Resources/world_generator.py
world_generator_script = Resources/generate_worlds.sh
timeout_script = Resources/timeout.sh
run_single_agent_script = Resources/run_agent.sh

